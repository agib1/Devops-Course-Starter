name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore: 
      - 'README.md'
  workflow_dispatch:
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Build test container
        shell: bash
        run: |
          docker build --target test --tag todo-app:test .

      - name: Run tests
        shell: bash
        run: |
          docker run todo-app:test
  
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_HUB_USER}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Build and push docker image to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          target: "production"
          push: true
          tags: ${{secrets.DOCKER_HUB_USER}}/todo-app:${{github.sha}}, ${{secrets.DOCKER_HUB_USER}}/todo-app:latest

      - name: Terraform init 
        run: terraform init

      - name: Terraform apply
        id: tf-apply
        run: terraform apply
        env: 
          TF_VAR_prefix: "test"
          TF_VAR_FLASK_APP: "todo_app/app"
          TF_VAR_OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          TF_VAR_OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          TF_VAR_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TF_VAR_WEBSITES_ENABLE_APP_SERVICE_STORAGE: "false"
          TF_VAR_WEBSITES_PORT: "5100"

      - name: Terraform output 
        id: tf-output 
        run: echo "webhook_url=$(terraform output webhook_url)" >> $GITHUB_OUTPUT

      - name: Deploy image to web app
        run: curl -dH -X POST '${{ steps.tf-output.outputs.webhook_url }}'
